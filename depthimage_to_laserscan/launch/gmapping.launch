<?xml version="1.0"?>

<launch>
    <!--arg name="svo_file"              default="/home/silent/a.svo" /-->
    <arg name="zed_nodelet_name"         default="zed_nodelet" />
    <arg name="svo_file"              default="" />
    <arg name="stream"                default="" /> <!-- <arg name="stream" default="<ip_address>:<port>"> -->
    <arg name="node_name"             default="zed_node" />
    <arg name="camera_model"          default="zed2i" /> <!-- 'zed' or 'zedm' or 'zed2' -->
    <arg name="publish_urdf"          default="true" />
    <arg name="camera_name"           default="zed2i" /> <!-- The name you want -->
    <arg name="base_frame"            default="base_link" />
    <arg name="cam_pos_x"             default="0.0" />
    <arg name="cam_pos_y"             default="0.0" />
    <arg name="cam_pos_z"             default="0.0" />
    <arg name="cam_roll"              default="0.0" />
    <arg name="cam_pitch"             default="0.0" />
    <arg name="cam_yaw"               default="0.0" />
    <arg name="camera_id"             default="0" />
    <arg name="gpu_id"                default="-1" />
    <arg name="nodelet_manager_name"  default="$(arg camera_name)_nodelet_manager" />
    <arg name="odom_frame"  default="odom"/>
    <arg name="scan_topic"  default="scan" />



    <!-- <arg name="camera_name"           default="zed" /> The name you want -->
    <!-- <arg name="camera_model"          default="zed" /> 'zed' or 'zedm' or 'zed2' -->
    
    <!-- GPU ID-->

    <!-- Orientation respect to base frame (i.e. "base_link) -->
    ****************************************************************


    <!-- <arg name="zed_id"                default="0" />
    <arg name="gpu_id"                default="-1" />
    <arg name="publish_tf"            default="true" />
    <arg name="odometry_frame"        default="odom" />
    <arg name="camera_frame"          default="zed_left_camera" />
    <arg name="depth_frame"           default="zed_depth_camera" /> -->

*****************************
    

    <!-- Load SVO file -->
    <!-- <arg name="svo_file"              default="" /><arg name="svo_file" default="path/to/svo/file.svo"> -->
    <!-- Remote stream -->

    <!-- Base frame -->
    <!-- <arg name="base_frame"            default="base_link" /> -->

    <!-- Publish ZED urdf -->
    <!-- <arg name="publish_urdf"          default="true" /> -->

    

    <!-- Position respect to base frame (i.e. "base_link) -->
    <!-- <arg name="cam_pos_x"             default="0.0" /> -->
    <!-- <arg name="cam_pos_y"             default="0.0" /> -->
    <!-- <arg name="cam_pos_z"             default="0.0" /> -->

    <!-- Orientation respect to base frame (i.e. "base_link) -->
    <!-- <arg name="cam_roll"              default="0.0" /> -->
    <!-- <arg name="cam_pitch"             default="0.0" /> -->
    <!-- <arg name="cam_yaw"               default="0.0" /> -->

    <!-- Publish urdf zed -->
     
<group ns="$(arg camera_name)">
    <node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager_name)"  args="manager" output="screen" />  
    
    <!-- <include file="$(find zed_wrapper)/launch/include/zed_camera_nodelet.launch">
        <arg name="nodelet_manager_name"            value="$(arg nodelet_manager_name)" />
        <arg name="camera_name"                     value="$(arg camera_name)" />
        <arg name="svo_file"                        value="$(arg svo_file)" />
        <arg name="stream"                          value="$(arg stream)" />
        <arg name="node_name"                       value="$(arg zed_nodelet_name)" />
        <arg name="camera_model"                    value="$(arg camera_model)" />
        <arg name="base_frame"                      value="$(arg base_frame)" />
        <arg name="publish_urdf"                    value="$(arg publish_urdf)" />
        <arg name="cam_pos_x"                       value="$(arg cam_pos_x)" />
        <arg name="cam_pos_y"                       value="$(arg cam_pos_y)" />
        <arg name="cam_pos_z"                       value="$(arg cam_pos_z)" />
        <arg name="cam_roll"                        value="$(arg cam_roll)" />
        <arg name="cam_pitch"                       value="$(arg cam_pitch)" />
        <arg name="cam_yaw"                         value="$(arg cam_yaw)" />
    </include> -->

    <node name="$(arg node_name)" pkg="zed_wrapper" type="zed_wrapper_node" output="screen" required="true">launch-prefix="valgrind" -->
        
        <rosparam file="$(find zed_wrapper)/params/common.yaml" command="load" />
        <rosparam file="$(find zed_wrapper)/params/$(arg camera_model).yaml" command="load" />


        <param name="general/camera_name"               value="$(arg camera_name)" />

        <!-- Base frame -->
        <param name="general/base_frame"                value="$(arg base_frame)" />

        <!-- SVO file path -->
        <param name="svo_file"                          value="$(arg svo_file)" />

        <!-- Remote stream -->
        <param name="stream"                            value="$(arg stream)" />

        <!-- Camera ID -->
        <param name="general/zed_id"                    value="$(arg camera_id)" />

        <!-- GPU ID -->
        <param name="general/gpu_id"                    value="$(arg gpu_id)" />
   
        
        <!-- Camera name -->
    </node>
    
    


    <!-- <node name="zed_wrapper_node" pkg="zed_wrapper" type="zed_wrapper_node" output="screen"> -->

        <!-- publish odometry frame -->
        <!-- <param name="publish_tf"            value="$(arg publish_tf)" /> -->
        <!-- Configuration frame camera -->    
        <!-- <param name="odometry_frame"        value="$(arg odometry_frame)" /> -->
        <!-- <param name="base_frame"            value="$(arg base_frame)" /> -->
        <!-- <param name="camera_frame"          value="$(arg camera_frame)" /> -->
        <!-- <param name="depth_frame"           value="$(arg depth_frame)" /> -->
    
        <!-- SVO file path -->
        <!-- <param name="svo_filepath"          value="$(arg svo_file)" /> -->

        <!-- ZED parameters -->
        <!-- <param name="zed_id"                value="$(arg zed_id)" /> -->

        <!-- <param name="resolution"            value="2" /> -->
        <!-- <param name="quality"               value="2" /> -->
        <!-- <param name="sensing_mode"          value="0" /> -->
        <!-- <param name="frame_rate"            value="30" /> -->
        <!-- <param name="odometry_db"           value="" /> -->
        <!-- <param name="openni_depth_mode"     value="1" /> -->
        <!-- <param name="gpu_id"                value="$(arg gpu_id)" /> -->
        <!-- <param name="confidence"            value="80" /> -->
        <!-- <param name="depth_stabilization"   value="1" /> -->

        <!-- ROS topic names -->
        <!-- <param name="rgb_topic"             value="rgb/image_rect_color" /> -->
        <!-- <param name="rgb_raw_topic"         value="rgb/image_raw_color" /> -->
        <!-- <param name="rgb_cam_info_topic"    value="rgb/camera_info" /> -->

        <!-- <param name="left_topic"            value="left/image_rect_color" /> -->
        <!-- <param name="left_raw_topic"        value="left/image_raw_color" /> -->
        <!-- <param name="left_cam_info_topic"   value="left/camera_info" /> -->
    
        <!-- <param name="right_topic"           value="right/image_rect_color" /> -->
        <!-- <param name="right_raw_topic"       value="right/image_raw_color" /> -->
        <!-- <param name="right_cam_info_topic"  value="right/camera_info" /> -->

        <!-- <param name="depth_topic"           value="depth/depth_registered" /> -->
        <!-- <param name="depth_cam_info_topic"  value="depth/camera_info" /> -->

        <!-- <param name="point_cloud_topic"     value="point_cloud/cloud_registered" /> -->

        <!-- <param name="odometry_topic"        value="odom" /> -->
    <!-- </node> -->

    <!-- ROS URDF description of the ZED -->
   
        <!-- <node name="zed_state_publisher" pkg="robot_state_publisher" type="state_publisher">
            <remap from="robot_description" to="zed_description" />
        </node> -->
        
    <group if="$(arg publish_urdf)">
        <!-- <param name="zed_description" textfile="$(find zed_wrapper)/urdf/zed.urdf" /> -->
        <param name="$(arg camera_name)_description"
               command="$(find xacro)/xacro '$(find zed_wrapper)/urdf/zed_descr.urdf.xacro'
                        camera_name:=$(arg camera_name)
                        camera_model:=$(arg camera_model)
                        base_frame:=$(arg base_frame)
                        cam_pos_x:=$(arg cam_pos_x)
                        cam_pos_y:=$(arg cam_pos_y)
                        cam_pos_z:=$(arg cam_pos_z)
                        cam_roll:=$(arg cam_roll)
                        cam_pitch:=$(arg cam_pitch)
                        cam_yaw:=$(arg cam_yaw)"
        />
     <node name="$(arg camera_name)_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen" required="true">
         <remap from="robot_description" to="$(arg camera_name)_description" />
     </node>
       
    </group>


<!-- Depth_image to Laser_Scan -->
    <!-- <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
        <param name="scan_height" value="50"/>
        <param name="output_frame_id" value="/zed_center"/>
        <param name="range_min" value="0.5"/>
        <param name="range_max" value="8"/>
        <remap from="image" to="/zed2i/depth/depth_registered"/>
        <remap from="scan" to ="/scan"/>
    </node> -->
    <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet $(arg nodelet_manager_name)">
             <param name="scan_height" value="10"/>
             <param name="output_frame_id" value="$(arg camera_name)_left_camera_frame"/>
             <param name="range_min" value="0.1"/>
             <remap from="image" to="$(arg zed_nodelet_name)/depth/depth_registered"/>
    </node>
</group>

<!-- Laser_Filter -->
<!-- <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter">
    <rosparam command="load" file="$(find depthimage_to_laserscan)/launch/laser_filter.yaml" />
    <remap from="scan" to="base_scan" />
    <remap from="scan_filtered" to="scan" />
</node> -->

<node pkg="tf" type="static_transform_publisher" name="base_to_laser" args="0 0 0 0 0 0 1 base_frame zed_initial_frame 100" />
<node pkg="tf" type="static_transform_publisher" name="base_to_camera" args="0 0 0.3 0 0 0 1 base_frame zed_center 100" />
<node pkg="tf" type="static_transform_publisher" name="map_to_base" args="0 0 0 0 0 0 1 map base_frame 100" />


<!-- Laser Scan Match -->
<node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen">

    <param name="fixed_frame" value = "odom"/>
    <param name="base_frame" value="$(arg base_frame)"/>
    <param name="use_alpha_beta" value="false"/>
    <param name="use_odom" value="false"/>
    <param name="use_imu" value="false"/>
    <param name="max_iterations" value="10"/>
    <param name="publish_pose" value="true"/>
    <param name="publish_tf" value="true"/>
    <param name="use_vel" value="false"/>
 </node>

<!-- Gmapping -->
<node pkg="gmapping" type="slam_gmapping" name="slam_gmapping" output="screen">
    <param name="map_udpate_interval" value="2.0"/>
    <param name="delta" value="0.02"/>
    <param name="base_frame" value="$(arg base_frame)"/>
    
    <param name="minimumScore" value="150"/>
    <param name="linearUpdate" value="0.5"/>
    <param name="angularUpdate" value="0.436"/>
    <param name="temporalUpdate" value="-1.0"/>
    <param name="resampleThreshold" value="0.5"/>
    <param name="particles" value="20"/>
    <param name="xmin" value="-20"/>
    <param name="xmax" value="20"/>
    <param name="ymin" value="-20"/>
    <param name="ymax" value="20"/>
    <param name="odom_frame" value="$(arg odom_frame)"/>
    <param name="map_update_interval" value="5.0"/>
    <param name="maxUrange" value="6.0"/>
    <param name="maxRange" value="8.0"/>
    <param name="sigma" value="0.05"/>
    <param name="kernelSize" value="1"/>
    <param name="lstep" value="0.05"/>
    <param name="astep" value="0.05"/>
    <param name="iterations" value="5"/>
    <param name="lsigma" value="0.075"/>
    <param name="ogain" value="3.0"/>
    <param name="lskip" value="0"/>
    <!-- <param name="minimumScore" value="200"/> -->
    <param name="srr" value="0.01"/>
    <param name="srt" value="0.02"/>
    <param name="str" value="0.01"/>
    <param name="stt" value="0.02"/>
    <param name="llsamplerange" value="0.01"/>
    <param name="llsamplestep" value="0.01"/>
    <param name="lasamplerange" value="0.005"/>
    <param name="lasamplestep" value="0.005"/>
    <remap from="image" to="$(arg zed_nodelet_name)/depth/depth_registered"/>
    <!-- <remap from="scan" to="/scan"/> -->
    <!-- <param name="particles" value="80"/> -->
</node> 

<!--RVIZ launch -->
<node pkg="rviz" type="rviz" name="rviz" args="-d $(find depthimage_to_laserscan)/rviz/gmapping.rviz"/>
</launch>
